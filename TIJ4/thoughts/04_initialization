构造函数：
1.对象的创建与构造函数的执行是一体的
2.构造函数的命名很好地区分开了普通函数(首字母必定大写),同时使得编译器能够自动识别
3.构造函数一定无返回值,一般方法可以自己定义为无返回值
4.无构造函数时,编译器会帮你自动生成默认构造函数,定义了任意构造函数后,编译器不会再自动生成

为何产生方法重载?
1.减少重复表达的需要
2.由于构造函数名称固定,因此需要重载来进行不同的初始化

如何区分重载的方法?
1.依靠其参数的种类,数目和顺序

当使用基本类型作为重载方法参数时的一些注意点:
1.提供的参数类型较小时,一般自动升为高一级的类型
2.常数自动升为int类型,char类型自动升为int类型(前提都是存在int对应的重载方法)
3.提供的参数类型较大时,必须cast才能被接受为合法参数

this基本理解:
1.类中定义的每一个非静态方法都有一个隐含的参数,指定其所操作的对象(仅这样理解)

什么时候用this?
1.引用当前对象时
2.将当前对象传递给另外一个方法时
3.在构造函数里调用构造函数时
4.域名与构造函数参数名冲突时,消解歧义

在构造函数里调用构造函数:
1.用this(args)
2.必须在开头
3.只能用一次

static再理解:
1.静态方法中没有this
2.静态访问非静态的域或方法时,必须依赖其引用(在此之前包含对象的创建),可以理解成静态为现实,非静态为虚拟
3.非静态方法访问静态的方法和域时无特殊限制



